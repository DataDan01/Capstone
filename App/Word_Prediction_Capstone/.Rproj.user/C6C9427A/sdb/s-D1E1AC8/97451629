{
    "collab_server" : "",
    "contents" : "## Loading in the data once and necessary libraries\nsource(\"./Prediction_Functions.R\", local = TRUE)\nrequire(htmltools)\nrequire(compiler)\nrequire(hunspell)\nrequire(shiny)\n\n## Reactive code\nshinyServer(function(input, output) {\n  \n  output$check <- renderUI({\n  \n  checked.input <- input.check(input$input.text)\n      \n    if(length(checked.input) == 2) {\n      \n      str1 <- \"No errors detected.<br/>\"\n      str2 <- paste(\"Input Passed: \", checked.input$`Input Used`)\n      \n      output.1 <- HTML(paste(str1, str2, sep = \"<br/>\"))\n      \n      return(output.1)\n    }\n    \n    if(length(checked.input) > 2) {\n      \n      str1 <- \"Potential errors detected.\"\n      \n      str2 <- checked.input$Warning\n      \n      str3 <- \"<br/>\"\n      \n      for(i in 3:length(checked.input)-1) {\n        \n        str3 <- paste(\n          str3,\n          paste0(names(checked.input)[i], \" -->\"),\n          paste(checked.input[[i]], collapse = \" | \"),\n          \"<br/>\"\n        )\n      }\n      \n      str4 <- paste(\"Input Passed: \", checked.input$`Input Used`)\n      \n      output.2 <- HTML(paste(str1, str2, str3, str4, sep = \"<br/>\"))\n      \n      return(output.2) \n    }\n    \n    \n  })\n  \n  output$summary <- renderUI({\n    \n    checked.input <- input.check(input$input.text)\n    \n    pred <- predict.ngram(tune = 30,\n                          sentence = input$input.text)\n    \n    str1 <- paste0(\"Original Input: \", pred$`Original Input`)\n    \n    str2 <- paste0(\"Input Used: \", pred$`Input Used`)\n    \n    str3 <- paste0(\"Back-Offs: \", pred$`Back-Offs`)\n    \n    str4 <- paste0(\"Seen Before? \", pred$`Seen Before?`)\n    \n    str5 <- \"<br/>Best Prediction(s): \"\n    \n    str6 <- paste(pred$`Best Predictions`, collapse = \" | \")\n    \n    str5 <- paste(str5, str6)        \n    \n    output.3 <- HTML(paste(str1, str2, str3, \n                           str4, str5, sep = \"<br/>\"))\n    \n    output$table <- renderTable({pred$`Result Table`})\n    \n    return(output.3)\n  })  \n  \n})",
    "created" : 1465021415849.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "75587569",
    "id" : "97451629",
    "lastKnownWriteTime" : 1465022771,
    "last_content_update" : 1465022771467,
    "path" : "~/OneDrive/R/Capstone/App/Word_Prediction_Capstone/server.R",
    "project_path" : "server.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}